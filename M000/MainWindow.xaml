<Window x:Class="M000.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:M000"
		xmlns:conv="clr-namespace:M000.Converter"
		xmlns:model="clr-namespace:M000.Model"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
		xmlns:valid="clr-namespace:M000.Validation"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		WindowStartupLocation="CenterScreen"
        Title="MainWindow"
		Width="400"
		SizeToContent="Height"
		FontSize="18">
	<Window.Resources>
		<ObjectDataProvider x:Key="Odp_Colors" MethodName="GetType" ObjectType="{x:Type sys:Type}">
			<ObjectDataProvider.MethodParameters>
				<sys:String>
					System.Windows.Media.Colors, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
				</sys:String>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider x:Key="Odp_ColorsProperties" MethodName="GetProperties" ObjectInstance="{StaticResource Odp_Colors}"/>

		<conv:StringToColorConverter x:Key="SCC"/>
		<valid:DateRangeRule x:Key="DateRule"/>
		<valid:ColorRule x:Key="ColRule" ValidatesOnTargetUpdated="True"/>

		<local:ValidationRuleCollection x:Key="TextRules">
			<valid:LengthRule ValidatesOnTargetUpdated="True"/>
			<valid:LetterRule ValidatesOnTargetUpdated="True"/>
		</local:ValidationRuleCollection>

		<ControlTemplate x:Key="ErrorTemplate">
			<StackPanel>
				<AdornedElementPlaceholder x:Name="ValidierendesElement"/>
				<Popup IsOpen="{Binding ElementName=ValidierendesElement, Path=AdornedElement.IsMouseOver, Mode=OneWay}"
					   PlacementTarget="{Binding ElementName=ValidierendesElement}">
					<TextBlock Text="{Binding ElementName=ValidierendesElement, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
							   Background="Red"
							   Foreground="White"/>
				</Popup>
			</StackPanel>
		</ControlTemplate>
	</Window.Resources>
	<Window.Background>
		<LinearGradientBrush>
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="Aqua" Offset="0"></GradientStop>
				<GradientStop Color="Green" Offset="1"></GradientStop>
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
	</Window.Background>
	<StackPanel Margin="10">
		<UniformGrid>
			<TextBlock Text="Vorname: "/>
			<TextBox Text="{local:ValidationMarkup {Binding Current.Vorname, UpdateSourceTrigger=PropertyChanged}, {StaticResource TextRules}}"
					 Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
					 Name="VornameTB"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Nachname: "/>
			<TextBox Text="{local:ValidationMarkup {Binding Current.Nachname, UpdateSourceTrigger=PropertyChanged}, {StaticResource TextRules}}"
					 Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
					 Name="NachnameTB"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geburtsdatum: "/>
			<DatePicker SelectedDate="{local:ValidationTest {Binding Current.GebDat, UpdateSourceTrigger=PropertyChanged}, {StaticResource DateRule}}"
						Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
						Name="GebDatDP"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Verheiratet: "/>
			<CheckBox VerticalAlignment="Center" IsChecked="{Binding Current.Verheiratet}"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Lieblingsfarbe: "/>
			<ComboBox SelectedValue="{local:ValidationTest {Binding Current.Lieblingsfarbe, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SCC}}, {StaticResource ColRule}}"
					  SelectedValuePath="Name"
					  Validation.ErrorTemplate="{StaticResource ErrorTemplate}"
					  ItemsSource="{Binding Source={StaticResource Odp_ColorsProperties}}"
					  Name="FarbeCB">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Rectangle Width="20"
									   Height="20"
									   Stroke="Black"
									   StrokeThickness="2"
									   Fill="{Binding Name}"/>
							<TextBlock Text="{Binding Name, StringFormat=' {0} '}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<!--<ComboBoxItem Content="Rot" Foreground="Red"/>
				<ComboBoxItem Content="Grün" Foreground="Green"/>
				<ComboBoxItem Content="Blau" Foreground="Blue"/>
				<ComboBoxItem Content="Gelb" Foreground="Yellow"/>-->
			</ComboBox>
		</UniformGrid>
		<UniformGrid>
			<UniformGrid.Resources>
				<conv:BooleanToGeschlechtConverter x:Key="BG"/>
			</UniformGrid.Resources>

			<TextBlock Text="Geschlecht: "/>
			<ComboBox ItemsSource="{local:Enum {x:Type model:Geschlecht}}" SelectedValue="{Binding Current.Gender}"/>
			
			<!--<ItemsControl ItemsSource="{local:Enum {x:Type model:Geschlecht}}">
				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="{x:Type model:Geschlecht}">
						<CheckBox VerticalContentAlignment="Center" Content="{Binding}" Name="RB"
							IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window},
												Path=Current.Gender,
												Converter={StaticResource BG},
												ConverterParameter={local:ConverterParameterReference {Binding ElementName=RB, Path=Content}}}">
						</CheckBox>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>-->
			
			<!--<RadioButton GroupName="G" Content="M" IsChecked="{Binding Current.Gender, Converter={StaticResource BG}, ConverterParameter={x:Static model:Geschlecht.M}}"/>
			<RadioButton GroupName="G" Content="W" IsChecked="{Binding Current.Gender, Converter={StaticResource BG}, ConverterParameter={x:Static model:Geschlecht.W}}"/>
			<RadioButton GroupName="G" Content="D" IsChecked="{Binding Current.Gender, Converter={StaticResource BG}, ConverterParameter={x:Static model:Geschlecht.D}}"/>-->
		</UniformGrid>
		<Grid Margin="0, 0, 0, 5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="50"/>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Button Content="OK" Grid.Column="1" Margin="0, 0, 5, 0" Click="Ok_Clicked">
				<Button.Style>
					<Style TargetType="Button">
						<!-- BasedOn="{StaticResource ButtonDefaultStyle}"-->
						<Setter Property="IsEnabled" Value="False"/>
						<Style.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding ElementName=VornameTB, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=NachnameTB, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=GebDatDP, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=FarbeCB, Path=(Validation.HasError)}" Value="False"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="IsEnabled" Value="True"/>
							</MultiDataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
			<Button Content="Abbrechen" Grid.Column="2" Margin="5, 0, 0, 0"/>
		</Grid>
	</StackPanel>
</Window>
